% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eigensound.R
\name{eigensound}
\alias{eigensound}
\title{Sound waves onto morphometric data}
\usage{
eigensound(analysis.type = NULL, dBlevel = 25, wav.at = getwd(),
  store.at = getwd(), flim = c(0, 10), tlim = c(0, 1), trel = tlim,
  mag.time = 1, x.length = 100, y.length = 70, log.scale = TRUE,
  add.points = FALSE, add.contour = TRUE, EQ = c(0.05, 0.15, 0.3,
  0.5, 0.7, 0.85, 0.95), f = 44100, wl = 512, ovlp = 70,
  plot.exp = TRUE, plot.as = "jpeg", plot.type = "surface",
  TPS.file = NULL)
}
\arguments{
\item{analysis.type}{type of analysis intended. If \code{analysis.type = "threeDshape"}, semilandmarks are acquired from spectrogram data using a three-dimensional representation of sound (MacLeod et al., 2013). If \code{analysis.type = "twoDshape"}, semilandmarks are acquired using energy quantiles and a two-dimensional curve of relative amplitude. By default: \code{analysis.type = NULL} (i.e. method must be specified before the analysis).}

\item{dBlevel}{absolute amplitude value to be used as relative amplitude contour, which will serve as reference for semilandmark acquisition in both \code{"threeDshape"} and \code{"twoDshape"}. By default: \code{dBlevel = 25}}

\item{wav.at}{filepath to the folder where \code{Wave} files are stored. Should be presented between quotation marks. By default: \code{wav.at = getwd()} (i.e. use current working directory)}

\item{store.at}{filepath to the folder where \code{tps} file and spectrogram plots will be stored. Should be presented between quotation marks. By default: \code{store.at = getwd()} (i.e. use current working directory)}

\item{flim}{modifications of the frequency limits (Y-axis). Vector with two values in kHz. By default: \code{flim = c(0, 10)}}

\item{tlim}{modifications of the time limits (X-axis). Vector with two values in seconds. By default: \code{tlim = c(0, 1)}}

\item{trel}{only applies when \code{analysis.type = "twoDshape"}. When \code{tlim} is not null, set the relative scale to be used in the time (X-axis); relative to the numbers displayed on the time (X-axis) of spectrogram plots. By default: \code{trel = tlim}}

\item{mag.time}{only applies when \code{analysis.type = "twoDshape"}. Optional argument for magnifying the time coordinates (X-axis). This is sometimes desired for small sound windows (e.g. less than 1 s), in which the time coordinates will be on a different scale than that of frequency coordinates. In those cases, it is recommended to include \code{mag.time = 10} or \code{mag.time = 100}, depending on the lenght of sound window. By default: \code{mag.time = 1} (i.e. no magnification is performed)}

\item{x.length}{only applies when \code{analysis.type = "threeDshape"}. Length of sequence (i.e. number of cells per side on sound window) to be used as sampling grid coordinates on the time (X-axis).  By default: \code{x.length = 100}}

\item{y.length}{only applies when \code{analysis.type = "threeDshape"}. Length of sequence (i.e. number of cells per side on sound window) to be used as sampling grid coordinates on the frequency (Y-axis). By default: \code{y.length = 70}}

\item{log.scale}{only applies when \code{analysis.type = "threeDshape"}. A logical. If \code{TRUE}, \code{eigensound} will use a logarithmic scale on the time (X-axis), which is recommeded when the analyzed sounds present great variation on this axis (e.g. emphasize short duration sounds). If \code{FALSE}, a linear scale is used instead (same as MacLeod et al., 2013). By default: \code{log.scale = TRUE}}

\item{add.points}{only applies when \code{analysis.type = "twoDshape"}. A logical. If \code{TRUE}, \code{eigensound} will compute semilandmarks acquired by cross-correlation between energy quantiles (i.e. \code{EQ}) and a curve of relative amplitude (i.e. \code{dBlevel}). If \code{plot.exp = TRUE}, semilandmarks will be included in spectrogram plots. By default: \code{add.points = FALSE} (see \strong{Details})}

\item{add.contour}{only applies when \code{analysis.type = "twoDshape"} and  \code{plot.exp = TRUE}. A logical. If \code{TRUE}, exported spectrogram plots will include the longest curve of relative amplitude at the level specified by \code{dBlevel}. By default: \code{add.contour = TRUE}}

\item{EQ}{only applies when \code{analysis.type = "twoDshape"} and \code{add.points = TRUE}. A vector of energy quantiles intended (with \code{0 < EQ < 1}). By default: \code{EQ = c(0.05, 0.15, 0.3, 0.5, 0.7, 0.85, 0.95)} \strong{Note:} When dealing with narrow banded calls, consider reducing the number of quantiles to prevent errors in the analysis.}

\item{f}{sampling frequency of \code{Wave} files (in Hz). By default: \code{f = 44100}}

\item{wl}{length of the window for the analysis. By default: \code{wl} = 512.}

\item{ovlp}{overlap between two successive windows (in \%) for increased spectrogram resolution. By default: \code{ovlp = 70}}

\item{plot.exp}{a logical. If \code{TRUE}, for each \code{Wave} file on the folder indicated by \code{wav.at}, \code{eigensound} will store a spectrogram image on the folder indicated by \code{store.at}. Depending on the \code{analysis.type}, plots may consist of two or three-dimensional spectrogram images. By default: \code{plot.exp = TRUE}}

\item{plot.as}{only applies when \code{plot.exp = TRUE}. \code{plot.as = "jpeg"} will generate compressed images for quick inspection of semilandmarks; \code{plot.as = "tiff"} or \code{"tif"} will generate uncompressed high resolution images that can be edited and used for publication. By default: \code{plot.as = "jpeg"}}

\item{plot.type}{only applies when \code{analysis.type = "threeDshape"} and  \code{plot.exp = TRUE}. \code{plot.type = "surface"} will produce a simplified three-dimensional sound surface from the calculated semilandmarks (same output employed by MacLeod et al., 2013); \code{plot.type = "points"} will produce three-dimensional graphs with semilandmarks as points. By default: \code{plot.type = "surface"}}

\item{TPS.file}{Desired name for the \code{tps} file containing semilandmark coordinates. Should be presented between quotation marks. \strong{Note:} Whenever \code{analysis.type = "twoDshape"}, it will only work if \code{add.points = TRUE}. By default: \code{TPS.file = NULL} (i.e. prevents \code{eigensound} from creating a \code{tps} file)}
}
\description{
For each \code{Wave} file on a given folder, compute spectrogram data and acquire semilandmarks using a three-dimensional representation of sound (\code{analysis.type = "threeDshape"}), or the cross-correlation between energy quantiles and a curve of relative amplitude (\code{analysis.type = "twoDshape"}).
}
\details{
When \code{analysis.type = "twoDshape"} and \code{add.points = TRUE}, \code{eigensound} will compute semilandmarks acquired by cross-correlation between energy quantiles (i.e. \code{EQ}) and a curve of relative amplitude (i.e. \code{dBlevel}). However, this is often subtle and prone to incur in errors (e.g. bad alignment of acoustic units; inappropriate X and Y coordinates for the sound window; narrow banded calls). Therefore, a more robust protocol of error verification is achieved using \code{add.points = FALSE} and \code{add.contour = TRUE} (default), which allow for quick verification of acoustic units alignment and the shape of each curve of relative amplitude (specified by \code{dBlevel}).
}
\note{
In order to store the results from \code{eigensound} function and proceed with the Geometric Morphometric steps of the analysis (e.g. \code{\link{geomorph}} package; Adams et al., 2017), one can simultaneosly assign the function's output to an \code{R} object and/or store them as a \code{tps} file to be used by numerous softwares of geometric analysis of shape, such as the TPS series (Rohlf, 2015).

Additionally, one might also export two or three-dimensional plots as \code{jpeg} (compressed image) or \code{tiff} (uncompressed image) file formats, which can be edited for publication purposes.
}
\examples{
library(seewave)
library(tuneR)

# Create folder at current working directory to store Wave files
wav.at <- file.path(getwd(), "example SoundShape")
dir.create(wav.at)

# Create folder to store results
store.at <- file.path(getwd(), "example SoundShape/output")
dir.create(store.at)

# Select three acoustic units within each sound data
data("tico")
spectro(tico) # Visualize sound data that will be used

# Cut acoustic units from original Wave
cut.tico1 <- cutw(tico, f=44100, from=0, to=0.22, output = "Wave")
cut.tico2 <- cutw(tico, f=44100, from=0.22, to=0.44, output = "Wave")
cut.tico3 <- cutw(tico, f=44100, from=0.44, to=0.66, output = "Wave")

data("orni")
spectro(orni) # Visualize sound data that will be used

# Cut acoustic units from original Wave
cut.orni1 <- cutw(orni, f=44100, from=0, to=0.08, output = "Wave")
cut.orni2 <- cutw(orni, f=44100, from=0.12, to=0.22, output = "Wave")
cut.orni3 <- cutw(orni, f=44100, from=0.21, to=0.29, output = "Wave")

# Export Wave files containing acoustic units and store on previosly created folder
writeWave(cut.tico1, filename = file.path(wav.at, "cut.tico1.wav"), extensible = FALSE)
writeWave(cut.tico2, filename = file.path(wav.at, "cut.tico2.wav"), extensible = FALSE)
writeWave(cut.tico3, filename = file.path(wav.at, "cut.tico3.wav"), extensible = FALSE)
writeWave(cut.orni1, filename = file.path(wav.at, "cut.orni1.wav"), extensible = FALSE)
writeWave(cut.orni2, filename = file.path(wav.at, "cut.orni2.wav"), extensible = FALSE)
writeWave(cut.orni3, filename = file.path(wav.at, "cut.orni3.wav"), extensible = FALSE)

# Place sounds at beggining of sound window before analysis
align.wave(wav.at = wav.at, wav.to = "Aligned",
           time.length = 0.3, time.perc = 0.01, dBlevel = 25)

# Verify alignment using analysis.type = "twoDshape"
eigensound(analysis.type = "twoDshape", wav.at = file.path(wav.at, "Aligned"),
           store.at = store.at, flim=c(3, 18), tlim=c(0,0.22),
           plot.exp = TRUE, plot.as = "jpeg", dBlevel = 25)
# Go to folder specified by store.at and check jpeg files created

# Run eigensound function using analysis.type = "threeDshape" on aligned Wave files
# Store results as R object and tps file
eig.sample <- eigensound(analysis.type="threeDshape", flim=c(3, 18), tlim=c(0,0.22), dBlevel = 25,
                   wav.at = file.path(wav.at, "Aligned"), store.at = store.at,
                   x.length = 80, y.length = 60, TPS.file = "eigensound.sample.tps", log.scale = TRUE,
                   plot.exp = TRUE, plot.as = "jpeg", plot.type = "surface")
# Go to folder specified by store.at and check jpeg files created

# PCA using three-dimensional semilandmark coordinates
pca.eig.sample <- stats::prcomp(geomorph::two.d.array(eig.sample))

# Create factor to use as groups in subsequent plot of principal components
sample.gr <- factor(c(rep("orni", 3), rep("tico", 3)))

# Clear current R plot to prevent errors
dev.off()

# Plot result of Principal Components Analysis
pca.plot(PCA.out = pca.eig.sample, groups = sample.gr, conv.hulls = sample.gr,
         main="PCA of 3D coordinates", leg=TRUE, leg.pos = "bottomleft")

}
\references{
Adams, D. C., M. L. Collyer, A. Kaliontzopoulou & Sherratt, E. (2017) \emph{Geomorph: Software for geometric morphometric analyses}. R package version 3.0.5. https://cran.r-project.org/package=geomorph.

MacLeod, N., Krieger, J. & Jones, K. E. (2013). Geometric morphometric approaches to acoustic signal analysis in mammalian biology. \emph{Hystrix, the Italian Journal of Mammalogy, 24}(1), 110-125.

Rocha, P. & Romano, P. (\emph{in prep}) The shape of sound: A new \code{R} package that crosses the bridge between Geometric Morphometrics and Bioacoustics.

Rohlf, F.J. (2015) The tps series of software. \emph{Hystrix 26}, 9-12.
}
\seealso{
\code{\link{twoDshape}}, \code{\link{threeDshape}}, \code{\link{align.wave}}, \code{\link{geomorph}}, \code{\link{seewave}}

Useful links:
\itemize{
  \item{\url{https://github.com/p-rocha/SoundShape}}
  \item{Report bugs at \url{https://github.com/p-rocha/SoundShape/issues}}}
}
\author{
Pedro Rocha
}
