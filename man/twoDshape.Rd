% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/twoDshape.R
\name{twoDshape}
\alias{twoDshape}
\title{Semilandmarks from a two-dimensional curve of relative amplitude}
\usage{
twoDshape(wav.at = getwd(), store.at = getwd(), dBlevel = 25,
  flim = c(0, 10), tlim = c(0, 1), trel = tlim, mag.time = 1,
  f = 44100, wl = 512, ovlp = 70, add.points = FALSE,
  add.contour = FALSE, EQ = c(0.05, 0.15, 0.3, 0.5, 0.7, 0.85, 0.95),
  plot.exp = TRUE, plot.as = "jpeg", TPS.file = NULL)
}
\arguments{
\item{wav.at}{filepath to the folder where \code{Wave} files are stored. Should be presented between quotation marks. By default: \code{wav.at = getwd()} (i.e. use current working directory)}

\item{store.at}{filepath to the folder where \code{tps} file and spectrogram plots will be stored. Should be presented between quotation marks. By default: \code{store.at = getwd()} (i.e. use current working directory)}

\item{dBlevel}{absolute amplitude value to be used as relative amplitude contour, which will serve as reference for semilandmark acquisition. By default: \code{dBlevel = 25}}

\item{flim}{modifications of the frequency limits (Y-axis). Vector with two values in kHz. By default: \code{flim = c(0, 10)}}

\item{tlim}{modifications of the time limits (X-axis). Vector with two values in seconds. By default: \code{tlim = c(0, 1)}}

\item{trel}{relative scale to be used in the time (X-axis) when \code{tlim} is not null; relative to the numbers displayed on the time (X-axis) of spectrogram plots. By default: \code{trel == tlim}}

\item{mag.time}{optional argument for magnifying the time coordinates. This is sometimes desired for small sound windows (e.g. less than 1 s), in which time coordinates will be on a different scale than that of frequency coordinates. In those cases, it is recommended to include \code{mag.time = 10} or \code{mag.time = 100}, depending on lenght of sound window. By default: \code{mag.time = 1} (i.e. no magnification is performed)}

\item{f}{sampling frequency of \code{Wave} files (in Hz). By default: \code{f = 44100}}

\item{wl}{length of the window for the analysis. By default: \code{wl} = 512.}

\item{ovlp}{overlap between two successive windows (in percentage) for increased spectrogram resolution. By default: \code{ovlp = 70}}

\item{add.points}{a logical. If \code{TRUE}, \code{twoDshape} will compute semilandmarks acquired by cross-correlation between energy quantiles (i.e. \code{EQ}) and a curve of relative amplitude (i.e. \code{dBlevel}). If \code{plot.exp = TRUE}, semilandmarks will be included in spectrogram plots. By default: \code{add.points = FALSE} (see \strong{Details})}

\item{add.contour}{only applies when \code{plot.exp = TRUE}. A logical. If \code{TRUE}, exported spectrogram plots will include the longest curve of relative amplitude at the level specified by \code{dBlevel}. By default: \code{add.contour = TRUE}}

\item{EQ}{only applies when \code{add.points = TRUE}. A vector of energy quantiles intended (with \code{0 < EQ < 1}). By default: \code{EQ = c(0.05, 0.15, 0.3, 0.5, 0.7, 0.85, 0.95)} \strong{Note:} When dealing with narrow banded calls, any additional values could cause an error in subsequent steps of the analysis}

\item{plot.exp}{a logical. If \code{TRUE}, for each \code{Wave} file on the folder indicated by \code{wav.at}, \code{twoDshape} will store a spectrogram image on the folder indicated by \code{store.at}. Plots consist of spectrograms images and may include the longest curve of relative amplitude (\code{add.contour = TRUE}) and semilandmarks as points (\code{add.points = TRUE}). By default: \code{plot.exp = TRUE}}

\item{plot.as}{only applies when \code{plot.exp = TRUE}. \code{plot.as = "jpeg"} will generate compressed images for quick inspection of semilandmarks; \code{plot.as = "tiff"} or \code{"tif"} will generate uncompressed high resolution images that can be edited and used for publication. By default: \code{plot.as = "jpeg"}}

\item{TPS.file}{only applies when \code{add.points = TRUE}. Desired name for the \code{tps} file containing semilandmark coordinates. Should be presented between quotation marks. By default: \code{TPS.file = NULL} (i.e. prevents \code{twoDshape} from creating a \code{tps} file)}
}
\description{
For each \code{Wave} file on a given folder, compute spectrogram data and acquire semilandmarks using cross-correlation between energy quantiles and a two-dimensional curve of relative amplitude (\code{dBlevel}).
}
\details{
When \code{add.points = TRUE}, \code{twoDshape} will compute spectrogram data and acquire semilandmarks through cross-correlation between energy quantiles (i.e. \code{EQ}) and a curve of relative amplitude (i.e. \code{dBlevel}). However, this is often subtle and prone to incur in errors (e.g. bad alignment of acoustic units; inappropriate X and Y coordinates for the sound window; narrow banded calls). Therefore, a more robust protocol for error verification is achieved using \code{add.points = FALSE} and \code{add.contour = TRUE} (default), which allow for quick verification of acoustic units alignment and the shape of each curve of relative amplitude (specified by \code{dBlevel}).
}
\note{
In order to store the results from \code{twoDshape} function and proceed with the Geometric Morphometric steps of the analysis (e.g. \code{\link{geomorph}} package; Adams et al., 2017), one can simultaneosly assign the function's output to an \code{R} object and/or store them as a \code{tps} file to be used by numerous softwares of geometric analysis of shape, such as the TPS series (Rohlf, 2015).

Additionally, one might also export spectrogram images with contour and semilandmarks ploted, which is very useful as a protocol for error verification through semilandmark inspection (see Zelditch et al., 2012 for protocols of error verification in Geometric Morphometrics). These images can be exported as \code{jpeg} (compressed image) or \code{tiff} (uncompressed image) file formats.
}
\examples{
library(seewave)
library(tuneR)

# Create folder at current working directory to store Wave files
wav.at <- file.path(getwd(), "example SoundShape")
dir.create(wav.at)

# Create folder to store results
store.at <- file.path(getwd(), "example SoundShape/output")
dir.create(store.at)

# Select three acoustic units within each sound data
data("tico")
spectro(tico) # Visualize sound data that will be used

# Cut acoustic units from original Wave
cut.tico1 <- cutw(tico, f=44100, from=0, to=0.22, output = "Wave")
cut.tico2 <- cutw(tico, f=44100, from=0.22, to=0.44, output = "Wave")
cut.tico3 <- cutw(tico, f=44100, from=0.44, to=0.66, output = "Wave")

# Export Wave files containing acoustic units and store on previosly created folder
writeWave(cut.tico1, filename = file.path(wav.at, "cut.tico1.wav"), extensible = FALSE)
writeWave(cut.tico2, filename = file.path(wav.at, "cut.tico2.wav"), extensible = FALSE)
writeWave(cut.tico3, filename = file.path(wav.at, "cut.tico3.wav"), extensible = FALSE)

# Run twoDshape and store semilandmark coordinates on tps file
twoDshape(wav.at = wav.at, store.at = store.at, add.points=TRUE,
          flim=c(0, 12), tlim=c(0,0.22), plot.exp = TRUE, plot.as = "jpeg",
          TPS.file = "twoDshape-example-tico.tps")


}
\references{
Adams, D. C., M. L. Collyer, A. Kaliontzopoulou & Sherratt, E. (2017) \emph{Geomorph: Software for geometric morphometric analyses}. R package version 3.0.5. https://cran.r-project.org/package=geomorph.

Rocha, P. & Romano, P. (\emph{in prep}) The shape of sound: A new \code{R} package that crosses the bridge between Geometric Morphometrics and Bioacoustics.

Rohlf, F.J. (2015) The tps series of software. \emph{Hystrix 26}, 9-12.

Zelditch, M. L., Swiderski, D. L., Sheets, H. D. & Fink, W. L. (2012). \emph{Geometric morphometrics for biologists: A primer.} Elsevier (Second Edition). Elsevier, San Diego.
}
\seealso{
\code{\link{threeDshape}}, \code{\link{eigensound}}, \code{\link{geomorph}}

Useful links:
\itemize{
  \item{\url{https://github.com/p-rocha/SoundShape}}
  \item{Report bugs at \url{https://github.com/p-rocha/SoundShape/issues}}}
}
\author{
Pedro Rocha
}
